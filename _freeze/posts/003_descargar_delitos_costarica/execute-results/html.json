{
  "hash": "73d808838b1c5dc67f329f58b7090757",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Automatización de la descarga de datos de delitos en Costa Rica\"\ndescription: \"En este post aprenderemos cómo automatizar desde R la descarga, unificación y limpieza de datos sobre delitos en Costa Rica, obtenidos desde la plataforma del Poder Judicial.\"\ndate: 2025-03-04\ndate-modified: 2025-03-06\ncategories: [\"webscraping\", \"selenider\"] \nlang: \"es\"\nimage: images/oij.png\ntoc: true\ncode-line-numbers: true\ncode-copy: true\ntoc-location: left\nformat: html\neditor_options: \n  chunk_output_type: console\nexecute: \n  freeze: true\nauthor:\n  - name: Carlos Agüero B\n    affiliation: Aprende Tidyverse\n    affiliation-url: https://aprendetidyverse.com/\ncitation: true\nbibliography: references.bib\n---\n\n\n\n<meta property=\"og:title\" content=\"Automatización de la descarga de datos de delitos en Costa Rica\" />\n<meta property=\"og:description\" content=\"En este post aprenderemos cómo automatizar desde R la descarga, unificación y limpieza de datos sobre delitos en Costa Rica, obtenidos desde la plataforma del Poder Judicial.\" />\n<meta property=\"og:type\" content=\"video.other\" />\n<meta property=\"og:url\" content=\"https://aprendetidyverse.com/automatizacion-delitos\" />\n<meta property=\"og:image\" content=\"https://aprendetidyverse.com/images/oij.png\" />\n<meta property=\"og:site_name\" content=\"Aprende Tidyverse\" />\n<meta property=\"og:locale\" content=\"es_ES\" />\n\n<meta property=\"article:published_time\" content=\"2025-03-04T00:00:00+00:00\" />\n<meta property=\"article:modified_time\" content=\"2025-03-04T00:00:00+00:00\" />\n\n<!-- Open Graph Video Preview -->\n<meta property=\"og:video\" content=\"https://player.vimeo.com/video/710119524?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479\" />\n<meta property=\"og:video:secure_url\" content=\"https://player.vimeo.com/video/710119524?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479\" />\n<meta property=\"og:video:type\" content=\"text/html\" />\n<meta property=\"og:video:width\" content=\"1280\" />\n<meta property=\"og:video:height\" content=\"720\" />\n\n\n## Introducción: ¿Por qué hacer esto?\n\nTodos los días escuchamos en las noticias acerca del incremento en los homicidios y la inseguridad en Costa Rica. Por un lado, se dice que la inseguridad está fatal, por otro, que *\"es solo percepción\"* y que *\"se matan entre ellos\"* (refiriéndose a los delincuentes). Entre *dimes y diretes*, creo que este extracto del libro la sociedad del cansancio representa cómo nos podemos sentir.\n\n> En la era digital, el exceso de información nos satura hasta el punto de la apatía; el bombardeo constante de datos nos impide distinguir lo esencial y nos sumerge en un estado de desconfianza generalizada. - Byung-Chul Han, la sociedad del cansancio (2012). \n\nVeamos algunas de esas noticias: \n\n<br>\n<div class=\"iframely-embed\"><div class=\"iframely-responsive\" style=\"height: 140px; padding-bottom: 0;\"><a href=\"https://semanariouniversidad.com/pais/con-880-homicidios-2024-cerro-como-el-segundo-ano-mas-violento-de-la-historia/\" data-iframely-url=\"//cdn.iframe.ly/api/iframe?card=small&url=http%3A%2F%2Fsemanariouniversidad.com%2Fpais%2Fcon-880-homicidios-2024-cerro-como-el-segundo-ano-mas-violento-de-la-historia%2F&key=82791205449a6b87420b0f7a75017b28\"></a></div></div><script async src=\"//cdn.iframe.ly/embed.js\" charset=\"utf-8\"></script>\n<br>\n<iframe style=\"border-radius:12px\" src=\"https://open.spotify.com/embed/episode/08JtqQzvLNuXolKz4gm4oF?utm_source=generator\" width=\"100%\" height=\"152\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\"></iframe>\n<br>\n<br>\n<div class=\"iframely-embed\"><div class=\"iframely-responsive\" style=\"height: 140px; padding-bottom: 0;\"><a href=\"https://www.nacion.com/sucesos/crimenes/costa-rica-supera-100-homicidios-en-apenas-42-dias/4IYB2XIVJVHJDDLVONXBPHJR7E/story/\" data-iframely-url=\"//cdn.iframe.ly/api/iframe?card=small&url=https%3A%2F%2Fwww.nacion.com%2Fsucesos%2Fcrimenes%2Fcosta-rica-supera-100-homicidios-en-apenas-42-dias%2F4IYB2XIVJVHJDDLVONXBPHJR7E%2Fstory%2F&key=82791205449a6b87420b0f7a75017b28\"></a></div></div><script async src=\"//cdn.iframe.ly/embed.js\" charset=\"utf-8\"></script>\n<br>\n\nCreo que es fundamental que, como ciudadanos, tengamos acceso a la información para que podamos comprobar de manera independiente los datos que nos bombardean desde todas partes. No me malentiendan, no se trata de negar las instituciones ni de estar en contra de la prensa, para nada, sino de poder, dentro de lo posible, acceder a las fuentes y echar un vistazo a lo que pasa en el país, incluso más como un ejercicio de empatía que de análisis de datos.\n\nCon esa idea en mente, surge este mini tutorial, en el cual veremos, paso a paso, cómo utilizar R para descargar y unificar la información proporcionada por el [Poder Judicial](https://pjenlinea3.poder-judicial.go.cr/estadisticasoij/).\n\n\n## Automatizar la descarga\n\nEl primer problema aparecio al ver que la [plataforma del poder judicial](https://pjenlinea3.poder-judicial.go.cr/estadisticasoij/) sólo permite descargar los datos de un año por consulta (o al menos a mí me da error si intento descargar varios años juntos). Hacerlo manualmente para 10 años no era mi opción preferida, así que vamos a automatizarlo.\n\nPara lograr esto, vamos a utilizar los paquetes [selenider](https://ashbythorpe.github.io/selenider/index.html) y [chromote](https://rstudio.github.io/chromote/), una combinación que he venido probando desde hace poco con muy buenos resultados, nos permite hacer web scraping de forma sencilla y resuelve muchos de los problemas que teníamos al trabajar con [RSelenium](https://docs.ropensci.org/RSelenium/).\n\n### Selenider en 1 minuto:\n\n1. Levantas una sesión que controla el navegador por defecto, Chrome.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(selenider)\n\nsession <- selenider_session(\n  \"chromote\",\n  timeout = 10,\n  options = chromote_options(headless = FALSE)\n)\n```\n:::\n\n\n\n2. Abrir una url \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nopen_url(\"https://www.r-project.org/\")\n```\n:::\n\n\n\n3. Seleccionas elementos de la web usando CSS o XPath.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# selecciona los elementos con el id css rStudioHeader\nheader <- s(\"#rStudioHeader\") \n```\n:::\n\n\n\n3. Realizas acciones como clic, llenar información, hacer scroll, etc.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns(\".claseBoton\") |>\n  elem_click()\n```\n:::\n\n\n\n1. `elem_click()`\n\nRealiza un clic en el elemento especificado.\n\n2. `elem_right_click()`\n\nEjecuta un clic derecho sobre el elemento.\n\n3. `elem_double_click()`\n\nRealiza un doble clic en el elemento.\n\n4. `elem_hover()`\n\nPosiciona el cursor sobre el elemento, simulando la acción de pasar el mouse por encima.\n\n5. `elem_scroll_to()`\n\nDesplaza la vista hasta el elemento indicado, lo cual es útil si el elemento no está visible antes de realizar un clic o interacción.\n\nVeamos cómo es el proceso manual para identificar qué es lo que debemos automatizar:\n\n1. Indicar las fechas de inicio y fin.\n\n![](images/fechas_oij.png){width=50%}\n\n2. Indicar el lugar del suceso.\n\n![](images/lugar_suceso.png){width=50%}\n\n3. Seleccionar la categoría delictiva.\n\n![](images/categoria_delictiva.png){width=50%}\n\n4. Indicar si se trata de víctima policial.\n\n![](images/victima_policial.png){width=50%}\n\n5. Hacer clic en el botón de descargar Excel.\n\n![](images/guardar_excel.png){width=50%}\n\n> Acá me quedé pegado en un buen rato intentando como explicar el código, y llegué a la conclusión de que lo más razonable es un video corto.\n\n---\n\n<div style=\"padding:56.25% 0 0 0;position:relative;\"><iframe src=\"https://player.vimeo.com/video/1063262719?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"GMT20250306-153558_Recording_1920x1080\"></iframe></div><script src=\"https://player.vimeo.com/api/player.js\"></script>\n\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Puedes ver el código completo acá.\"}\nlibrary(rvest)\nlibrary(selenider)\nlibrary(lubridate)\nlibrary(fs)\nlibrary(purrr)\nlibrary(janitor)\nlibrary(glue)\nlibrary(chromote)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(stringr)\n\nwait_for_download <- function(download_dir, filename, timeout = 60) {\n  start_time <- Sys.time()\n  file_path <- file.path(download_dir, filename)\n  while (\n    as.numeric(difftime(Sys.time(), start_time, units = \"secs\")) <= timeout\n  ) {\n    if (\n      file.exists(file_path) &&\n        length(list.files(download_dir, pattern = \"\\\\.crdownload$\")) == 0\n    ) {\n      return(TRUE)\n    }\n    Sys.sleep(1)\n  }\n  cli::cli_abort(\"Se acabó el tiempo de espera\")\n}\n\ndownload_dataset_pj <- function(\n  date = lubridate::today(),\n  download_dir = \"data\",\n  filename = \"Estadisticas.xls\"\n) {\n  dir.create(download_dir, showWarnings = FALSE, recursive = TRUE)\n  full_path <- file.path(download_dir, filename)\n\n  session <- selenider_session(\n    \"chromote\",\n    timeout = 10,\n    options = chromote_options(headless = TRUE)\n  )\n  session$driver$Browser$setDownloadBehavior(\n    behavior = \"allow\",\n    downloadPath = normalizePath(download_dir)\n  )\n\n  open_url(\"https://pjenlinea3.poder-judicial.go.cr/estadisticasoij/\")\n\n  start_date <- format(date, \"%d/%m/%Y\")\n  end_date <- update(date, month = 12, day = 31)\n  end_date <- if_else(end_date > today(), today(), end_date)\n  end_date <- format(end_date, \"%d/%m/%Y\")\n\n  execute_js_expr(\n    \"document.getElementById('txtFechaFinal').removeAttribute('readonly',0);\"\n  )\n  execute_js_expr(glue(\n    \"document.getElementById('txtFechaFinal').value = '{end_date}';\",\n  ))\n\n  execute_js_expr(\n    \"document.getElementById('txtFechaInicio').removeAttribute('readonly',0);\"\n  )\n  execute_js_expr(glue(\n    \"document.getElementById('txtFechaInicio').value = '{start_date}';\",\n  ))\n\n  execute_js_expr(\"document.getElementById('chbTodoPais').click();\")\n  execute_js_expr(\"document.getElementById('chbTodoDelitos').click();\")\n  execute_js_expr(\"document.getElementById('chbTodaVictima').click();\")\n\n  execute_js_expr(\"document.getElementById('btnExcel').click();\")\n\n  wait_for_download(download_dir, filename)\n\n  new_filename <- paste0(\"delitos_\", format(date, \"%Y-%m-%d\"), \".html\")\n  new_path <- file.path(download_dir, new_filename)\n  fs::file_move(full_path, new_path)\n\n  return(new_path)\n}\n\n.years <- ymd(\"2025-01-01\") - years(0:11)\n\ndf <- map(\n  .years,\n  \\(x) {\n    .file <- download_dataset_pj(date = x)\n    df <- read_html(.file) |>\n      html_table()\n    df <- df[[1]]\n    return(df)\n  },\n  .progress = TRUE\n) |>\n  list_rbind()\n\ndf |>\n  clean_names() |>\n  mutate(\n    across(where(is.character), str_to_title),\n    fecha = ymd(fecha)\n  ) |>\n  readr::write_rds(glue(\"data/delitos_{today()}.rds\"))\n```\n:::\n\n\n\n## Problemas con el archivo descargado\n\nDespues de descargar los datos apareció un problema. al intentar abrir el archivo desde R, aparece un error, el archivo parecía corrupto o mal formateado. Raro, porque si abría el archivo directamente desde Excel, todo funcionaba bien.\n\nRevisando el código fuente de la web, pude encontrar que el archivo se genera a partir de una tabla `HTML` que se codifica en `Base64`, asignándole la extensión `.xls` *(Excel viejito)* y un MIME type de Excel. Esto quiere decir que, aunque aparenta ser un archivo de Excel, el contenido real es HTML y no el formato binario nativo de Excel (xls). Excel, que siempre que puede resuelve, logra detectar el contenido y mostrar la tabla sin problema, pero el paquete `readxl`, que utiliza la librería `libxls`, necesita el formato binario de Excel para poder funcionar. Por eso, al intentar abrirlo en R se produce el error *libxls error: Unable to open file*, porque, **sorpresa, ¡no es un archivo de Excel!**\n\nLa solución fue sencilla, si es un archivo `HTML`, basta con cambiarle la extensión de `.xls` a `.html` y usar la función `read_html` del paquete `rvest`. Una vez resuelto eso, queda completamente automatizada la descarga de 10 años de registros en un clic.\n\n## Limpieza y normalización de los datos\n\nA partir de aquí, el trabajo de limpieza es muy corto. Se normalizan los nombres de las columnas y se ajustan las variables de tipo texto para evitar tener todo en mayúsculas.\n\nAquí, alguien podría preguntarse: *¿por qué, entonces, no descargar directamente el archivo `.csv` en lugar del excel?* Pasa que, por algún motivo, al archivo `CSV` le falta la columna `distrito`. Asumo que está relacionado con la forma en que se genera a partir de la tabla HTML original, pero, la verdad, no lo investigué.\n\nPuedes descargar los datos en el siguiente enlace [descargar datos](../data/delitos_2025-03-03.zip)\n\n## ¿Y ahora qué?\n\nEsta es la primera parte del trabajo. Ahora que tenemos los datos, estamos listos para realizar un análisis. En el siguiente post hablaremos sobre el tema de los homicidios en Costa Rica.\n\nFinalmente, un reconocimiento especial al Poder Judicial por el esfuerzo y la transparencia de poner estos datos a disposición de todos.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}